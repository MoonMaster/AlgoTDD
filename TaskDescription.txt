Введение.

В данном задании необходимо реализовать структуру хранения данных для значений типа double. 
Структура данных должна позволять хранить фиксированное количество значений (не изменяемое после создания структуры).

Каждое поступающее в структуру значение является результатом измерения физического параметра. Измерения проводятся последовательно и каждое измерение имеет номер (0, 1, 2, 3...).
Если количество накопленных значений в структуре превышает количество заданное при ее создании, то при добавлении нового элемента самый старый элемент выбрасывется, а новый добавляется в конец.
Структура должна также иметь возможность выдать сумму элементов с одного НОМЕРА ИЗМЕРЕНИЯ (не включая) по другой НОМЕР ИЗМЕРЕНИЯ (включительно). 

Вам необходимо выполнить следующие задания:
1. Дополнить классы ArrayStruct, DictStruct, LinkedListStruct кодом реализущим хранение и обработку данных. Для класса ArrayStruct для хранения значений нужно использовать массив, для DictStruct словарь, а для LinkedListStruct - связаный список.
2. Проверьте, что все структуры проходят тест StructTest так же как FakeStruct. Дополните тест тест кейсами, необходимыми на ваш взгляд для проверки работоспособности структур (кроме FakeStruct).
3. Реализуйте свою структуру хранения данных в файле YourFastStruct так, чтобы она была не хуже уже реалзизоавнных (кроме FakeStruct) с точки зрения производительности (учитываем только CPU). Проверьте, что структура проходит тесты из пункта 2.
4. В проекте InsertAndAvgPerfTest реализуйте консольное приложение, которое наглядно демонстрирует, что ваша структура не хуже в сравнении с остальными (кроме FakeStruct)